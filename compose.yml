volumes:
  db:
  redis:
  assets:
services:
  api:
      env_file:
        - ./.env
      build:
        context: ./
      container_name: api
      ports: 
        - ${PORT}:${PORT}
      links:
        - db
      depends_on:
        - db
      volumes:
        - assets:/app/assets
  db:
    image: postgres
    container_name: db
    ports:
      - ${DB_PORT}:5179
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    image: redis
    container_name: redis
    ports:
      - ${REDIS_PORT}:6379
    restart: always
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis:/data
  redis-commander:
    image: rediscommander/redis-commander
    container_name: commander
    restart: always
    ports:
      - 8081:8081
    environment:
      - REDIS_HOSTS=local:redis:6379
  worker:
    build:
      context: ./server/redis
    depends_on:
      - redis
      - db
    stdin_open: true
    tty: true
    volumes:
      - ./server/redis/worker.py:/app/worker.py
    deploy:
      mode: replicated
      replicas: 2
  client:
    build:
      context: ./client
    container_name: "client"
    ports: 
      - ${CLIENT_PORT}:8000
  
