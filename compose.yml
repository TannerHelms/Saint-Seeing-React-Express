volumes:
  db:
  redis:
services:
  db:
    image: postgres
    container_name: ${DB_CONTAINER_NAME}
    ports:
      - ${DB_PORT}:5432
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    image: redis
    container_name: ${REDIS_CONTAINER_NAME}
    ports:
      - ${REDIS_PORT}:6379
    restart: always
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis:/data
  redis-commander:
    image: rediscommander/redis-commander
    container_name: ${REDIS_COMMANDER_CONTAINER_NAME}
    restart: always
    ports:
      - ${REDIS_COMMANDER_PORT}:8081
    environment:
      - REDIS_HOSTS=local:redis:6379
  # app:
  #   build:
  #     context: ./client/dist/
  #     dockerfile: ./Dockerfile
  #   container_name: "client"
  #   ports: 
  #     - 8100:8100
  #   develop: 
  #     watch: 
  #     - action: rebuild
  #     - path: .
  # api:
  #   build:
  #     context: ./
  #     dockerfile: ./Dockerfile
  #   container_name: "server"
  #   develop: 
  #     watch: 
  #     - action: rebuild
  #     - path: .
  #   ports: 
  #     - 3000:3000
  
